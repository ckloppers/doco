{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Courier New;}{\f1\fnil\fcharset0\fprq2 Helvetica;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-720\ql\ltrch\loch {\f1\fs24\b0\i0 * Every commit a candidate for Deployment}
\par\plain {\f1\fs24\b0\i0 * Build single deployable artifact}
\par\plain {\f1\fs24\b0\i0  * Continuous Delivery doesn\loch\af1\hich\af1\dbch\af1\uc1\u8217\'92t mean every change is deployed to production. It means every change is proven to be deployable at any time.}
\par\plain {\f1\fs24\b0\i0 * Continuous delivery is a capability to continually deploy software to production as frequently as needed.}
\par\plain \f1\fs24\b0\i0
\par\plain {\f1\fs24\b0\i0 Why CD?}
\par\plain {\f1\fs24\b0\i0 =======}
\par\plain {\f1\fs24\b0\i0 Improve speed to market}
\par\plain {\f1\fs24\b0\i0 Ensured quality}
\par\plain {\f1\fs24\b0\i0 Deploying code is seamless, no longer strenuous}
\par\plain {\f1\fs24\b0\i0 Improves you disaster recovery / Business continuity}
\par\plain {\f1\fs24\b0\i0 Improve business agility}
\par\plain \f1\fs24\b0\i0
\par\plain \f1\fs24\b0\i0
\par\plain {\f1\fs24\b0\i0 Beginnings of a deployment pipeline}
\par\plain {\f1\fs24\b0\i0 ===========================}
\par\plain {\f1\fs24\b0\i0 Commit Tests -> Integration Tests -> Deployable Artifact -> Deploy to Env}
\par\plain \f1\fs24\b0\i0
\par\plain {\f1\fs24\b0\i0 SCM -> }
\par\plain {\f1\fs24\b0\i0 Continuous Integration Tests (Unit Tests) ->}
\par\plain {\f1\fs24\b0\i0  (optional) System Integration Tests (SIT) ->}
\par\plain {\f1\fs24\b0\i0  (optional) Operational Acceptance Test (OAT) ->}
\par\plain {\f1\fs24\b0\i0  (optional) Security Tests ->}
\par\plain {\f1\fs24\b0\i0  (optional) Compliance Tests ->}
\par\plain {\f1\fs24\b0\i0 Deploy ->}
\par\plain {\f1\fs24\b0\i0 Deliver}
\par\plain \f1\fs24\b0\i0
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24\b1 Benefits}
\par\plain {\f0\fs24\b1 Speed}{\f0\fs24\b0 : You get faster delivery of the most important improvements and fixes. You can release some changes in hours or days. When you fix problems faster, your system will have fewer bugs. You can accelerate delivery of a few great improvements, learn fast, and beat the competition.}
\par\plain {\f0\fs24\b1 Quality:}{\f0\fs24\b0 \~I am often asked: "Does continuous delivery require me to release more quickly, with lower quality? Will I be releasing more bugs, and features with less refined usability?" Actually, continuous delivery gives you extra capacity that you can use to improve either speed or quality. You can choose to release faster, or you can choose to hold features longer before releasing and "unveiling" them, to move them to higher quality and usability. At Assembla, we found that our feature delivery got slower when we improved the usability of our software. Continuous delivery also results in systems with fewer bugs at any given time, because bugs are discovered and fixed faster.}
\par\plain {\f0\fs24\b1 Capacity and Scale:}{\f0\fs24\b0 \~You can include a bigger, more scalable development team in a continuous process. Batch processes like iteration planning, release planning, and release testing become exponentially harder to organize as you involve an increasing number of people. With continuous delivery, we solve this problem by skipping batch processes. With the code contribution workflows listed here, you can manage code and not people, and accept the code that is ready. Code is easier to manage. You can organize thousands of people and hundreds of systems with continuous delivery. Also, you can work with an entire world of talent, because you can manage distributed teams effectively.}
\par\plain {\f0\fs24\b1 Cost:}{\f0\fs24\b0 \~You spend less money and time on meetings and management. If you eliminate batch processes you don't need as many big, expensive meetings.}
\par\plain {\f0\fs24\b1 Focus:}{\f0\fs24\b0 \~Team members have more time to think. Developers can completely finish and release a task before they move to the next task. They do not need to switch their brains and their configurations between tasks. Product managers and QA people also get this benefit.}
\par\plain {\f0\fs24\b1 Clarity:}{\f0\fs24\b0 \~Your team should experience less stress. With continuous delivery, you fix small problems quickly. Bigger changes take only as long as the work requires, because they are not delayed by stops and starts. You have fewer high-pressure spikes of release work. You can think about one thing at a time. All of these factors lower stress so that you can have a better life and work more effectively.}}